ARM GAS  /tmp/ccgIfHGI.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"sk6812.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	__aeabi_dcmplt
  16              		.global	__aeabi_dcmpgt
  17              		.global	__aeabi_dsub
  18              		.global	__aeabi_ddiv
  19              		.global	__aeabi_dcmpge
  20              		.global	__aeabi_dadd
  21              		.global	__aeabi_dmul
  22              		.section	.text.rgb2hsv,"ax",%progbits
  23              		.align	1
  24              		.global	rgb2hsv
  25              		.syntax unified
  26              		.code	16
  27              		.thumb_func
  28              		.fpu softvfp
  30              	rgb2hsv:
  31              	.LFB40:
  32              		.file 1 "Src/sk6812.c"
   1:Src/sk6812.c  **** #include "sk6812.h"
   2:Src/sk6812.c  **** 
   3:Src/sk6812.c  **** hsv rgb2hsv(rgb in)
   4:Src/sk6812.c  **** {
  33              		.loc 1 4 0
  34              		.cfi_startproc
  35              		@ args = 24, pretend = 8, frame = 32
  36              		@ frame_needed = 0, uses_anonymous_args = 0
  37              	.LVL0:
  38 0000 82B0     		sub	sp, sp, #8
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 8
  41 0002 D0B5     		push	{r4, r6, r7, lr}
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 24
  44              		.cfi_offset 4, -24
  45              		.cfi_offset 6, -20
  46              		.cfi_offset 7, -16
  47              		.cfi_offset 14, -12
  48 0004 88B0     		sub	sp, sp, #32
  49              	.LCFI2:
  50              		.cfi_def_cfa_offset 56
  51 0006 0400     		movs	r4, r0
  52 0008 0C92     		str	r2, [sp, #48]
  53 000a 0D93     		str	r3, [sp, #52]
   5:Src/sk6812.c  ****     hsv         out;
ARM GAS  /tmp/ccgIfHGI.s 			page 2


   6:Src/sk6812.c  ****     double      min, max, delta;
   7:Src/sk6812.c  **** 
   8:Src/sk6812.c  ****     min = in.r < in.g ? in.r : in.g;
  54              		.loc 1 8 0
  55 000c 0E9E     		ldr	r6, [sp, #56]
  56 000e 0F9F     		ldr	r7, [sp, #60]
  57 0010 0696     		str	r6, [sp, #24]
  58 0012 0797     		str	r7, [sp, #28]
  59 0014 0C9A     		ldr	r2, [sp, #48]
  60 0016 0D9B     		ldr	r3, [sp, #52]
  61 0018 0292     		str	r2, [sp, #8]
  62 001a 0393     		str	r3, [sp, #12]
  63 001c 3000     		movs	r0, r6
  64              	.LVL1:
  65 001e 3900     		movs	r1, r7
  66 0020 FFF7FEFF 		bl	__aeabi_dcmplt
  67              	.LVL2:
  68 0024 0028     		cmp	r0, #0
  69 0026 6BD0     		beq	.L32
  70 0028 0096     		str	r6, [sp]
  71 002a 0197     		str	r7, [sp, #4]
  72              	.L2:
  73              	.LVL3:
   9:Src/sk6812.c  ****     min = min  < in.b ? min  : in.b;
  74              		.loc 1 9 0 discriminator 4
  75 002c 109A     		ldr	r2, [sp, #64]
  76 002e 119B     		ldr	r3, [sp, #68]
  77 0030 1600     		movs	r6, r2
  78 0032 1F00     		movs	r7, r3
  79 0034 0496     		str	r6, [sp, #16]
  80 0036 0597     		str	r7, [sp, #20]
  81 0038 009A     		ldr	r2, [sp]
  82 003a 019B     		ldr	r3, [sp, #4]
  83 003c 3000     		movs	r0, r6
  84 003e 3900     		movs	r1, r7
  85 0040 FFF7FEFF 		bl	__aeabi_dcmpgt
  86              	.LVL4:
  87 0044 0028     		cmp	r0, #0
  88 0046 03D1     		bne	.L4
  89 0048 3200     		movs	r2, r6
  90 004a 3B00     		movs	r3, r7
  91 004c 0092     		str	r2, [sp]
  92 004e 0193     		str	r3, [sp, #4]
  93              	.LVL5:
  94              	.L4:
  10:Src/sk6812.c  **** 
  11:Src/sk6812.c  ****     max = in.r > in.g ? in.r : in.g;
  95              		.loc 1 11 0 discriminator 4
  96 0050 029A     		ldr	r2, [sp, #8]
  97 0052 039B     		ldr	r3, [sp, #12]
  98 0054 069E     		ldr	r6, [sp, #24]
  99 0056 079F     		ldr	r7, [sp, #28]
 100 0058 3000     		movs	r0, r6
 101 005a 3900     		movs	r1, r7
 102 005c FFF7FEFF 		bl	__aeabi_dcmpgt
 103              	.LVL6:
 104 0060 0028     		cmp	r0, #0
ARM GAS  /tmp/ccgIfHGI.s 			page 3


 105 0062 01D1     		bne	.L6
 106              		.loc 1 11 0 is_stmt 0
 107 0064 029E     		ldr	r6, [sp, #8]
 108 0066 039F     		ldr	r7, [sp, #12]
 109              	.L6:
 110              	.LVL7:
  12:Src/sk6812.c  ****     max = max  > in.b ? max  : in.b;
 111              		.loc 1 12 0 is_stmt 1 discriminator 4
 112 0068 3200     		movs	r2, r6
 113 006a 3B00     		movs	r3, r7
 114 006c 0498     		ldr	r0, [sp, #16]
 115 006e 0599     		ldr	r1, [sp, #20]
 116 0070 FFF7FEFF 		bl	__aeabi_dcmplt
 117              	.LVL8:
 118 0074 0028     		cmp	r0, #0
 119 0076 01D1     		bne	.L8
 120 0078 049E     		ldr	r6, [sp, #16]
 121 007a 059F     		ldr	r7, [sp, #20]
 122              	.LVL9:
 123              	.L8:
  13:Src/sk6812.c  **** 
  14:Src/sk6812.c  ****     out.v = max;                                // v
 124              		.loc 1 14 0 discriminator 4
 125 007c 2661     		str	r6, [r4, #16]
 126 007e 6761     		str	r7, [r4, #20]
  15:Src/sk6812.c  ****     delta = max - min;
 127              		.loc 1 15 0 discriminator 4
 128 0080 009A     		ldr	r2, [sp]
 129 0082 019B     		ldr	r3, [sp, #4]
 130 0084 3000     		movs	r0, r6
 131 0086 3900     		movs	r1, r7
 132 0088 FFF7FEFF 		bl	__aeabi_dsub
 133              	.LVL10:
 134 008c 0090     		str	r0, [sp]
 135 008e 0191     		str	r1, [sp, #4]
 136              	.LVL11:
  16:Src/sk6812.c  ****     if (delta < 0.00001)
 137              		.loc 1 16 0 discriminator 4
 138 0090 424A     		ldr	r2, .L39
 139 0092 434B     		ldr	r3, .L39+4
 140 0094 FFF7FEFF 		bl	__aeabi_dcmplt
 141              	.LVL12:
 142 0098 0028     		cmp	r0, #0
 143 009a 36D1     		bne	.L38
  17:Src/sk6812.c  ****     {
  18:Src/sk6812.c  ****         out.s = 0;
  19:Src/sk6812.c  ****         out.h = 0; // undefined, maybe nan?
  20:Src/sk6812.c  ****         return out;
  21:Src/sk6812.c  ****     }
  22:Src/sk6812.c  ****     if( max > 0.0 ) { // NOTE: if Max is == 0, this divide would cause a crash
 144              		.loc 1 22 0
 145 009c 0022     		movs	r2, #0
 146 009e 0023     		movs	r3, #0
 147 00a0 3000     		movs	r0, r6
 148 00a2 3900     		movs	r1, r7
 149 00a4 FFF7FEFF 		bl	__aeabi_dcmpgt
 150              	.LVL13:
ARM GAS  /tmp/ccgIfHGI.s 			page 4


 151 00a8 0028     		cmp	r0, #0
 152 00aa 3AD0     		beq	.L35
  23:Src/sk6812.c  ****         out.s = (delta / max);                  // s
 153              		.loc 1 23 0
 154 00ac 3200     		movs	r2, r6
 155 00ae 3B00     		movs	r3, r7
 156 00b0 0098     		ldr	r0, [sp]
 157 00b2 0199     		ldr	r1, [sp, #4]
 158 00b4 FFF7FEFF 		bl	__aeabi_ddiv
 159              	.LVL14:
 160 00b8 A060     		str	r0, [r4, #8]
 161 00ba E160     		str	r1, [r4, #12]
  24:Src/sk6812.c  ****     } else {
  25:Src/sk6812.c  ****         // if max is 0, then r = g = b = 0
  26:Src/sk6812.c  ****         // s = 0, h is undefined
  27:Src/sk6812.c  ****         out.s = 0.0;
  28:Src/sk6812.c  ****         out.h = 0.0;                            // its now undefined
  29:Src/sk6812.c  ****         return out;
  30:Src/sk6812.c  ****     }
  31:Src/sk6812.c  ****     if( in.r >= max )                           // > is bogus, just keeps compilor happy
 162              		.loc 1 31 0
 163 00bc 3200     		movs	r2, r6
 164 00be 3B00     		movs	r3, r7
 165 00c0 0698     		ldr	r0, [sp, #24]
 166 00c2 0799     		ldr	r1, [sp, #28]
 167 00c4 FFF7FEFF 		bl	__aeabi_dcmpge
 168              	.LVL15:
 169 00c8 0028     		cmp	r0, #0
 170 00ca 31D1     		bne	.L15
  32:Src/sk6812.c  ****         out.h = ( in.g - in.b ) / delta;        // between yellow & magenta
  33:Src/sk6812.c  ****     else
  34:Src/sk6812.c  ****     if( in.g >= max )
 171              		.loc 1 34 0
 172 00cc 3200     		movs	r2, r6
 173 00ce 3B00     		movs	r3, r7
 174 00d0 0298     		ldr	r0, [sp, #8]
 175 00d2 0399     		ldr	r1, [sp, #12]
 176 00d4 FFF7FEFF 		bl	__aeabi_dcmpge
 177              	.LVL16:
 178 00d8 0028     		cmp	r0, #0
 179 00da 4ED0     		beq	.L37
  35:Src/sk6812.c  ****         out.h = 2.0 + ( in.b - in.r ) / delta;  // between cyan & yellow
 180              		.loc 1 35 0
 181 00dc 069A     		ldr	r2, [sp, #24]
 182 00de 079B     		ldr	r3, [sp, #28]
 183 00e0 0498     		ldr	r0, [sp, #16]
 184 00e2 0599     		ldr	r1, [sp, #20]
 185 00e4 FFF7FEFF 		bl	__aeabi_dsub
 186              	.LVL17:
 187 00e8 009A     		ldr	r2, [sp]
 188 00ea 019B     		ldr	r3, [sp, #4]
 189 00ec FFF7FEFF 		bl	__aeabi_ddiv
 190              	.LVL18:
 191 00f0 0022     		movs	r2, #0
 192 00f2 8023     		movs	r3, #128
 193 00f4 DB05     		lsls	r3, r3, #23
 194 00f6 FFF7FEFF 		bl	__aeabi_dadd
ARM GAS  /tmp/ccgIfHGI.s 			page 5


 195              	.LVL19:
 196 00fa 2060     		str	r0, [r4]
 197 00fc 6160     		str	r1, [r4, #4]
 198 00fe 23E0     		b	.L17
 199              	.LVL20:
 200              	.L32:
   8:Src/sk6812.c  ****     min = min  < in.b ? min  : in.b;
 201              		.loc 1 8 0
 202 0100 029A     		ldr	r2, [sp, #8]
 203 0102 039B     		ldr	r3, [sp, #12]
 204 0104 0092     		str	r2, [sp]
 205 0106 0193     		str	r3, [sp, #4]
 206 0108 90E7     		b	.L2
 207              	.LVL21:
 208              	.L38:
  18:Src/sk6812.c  ****         out.h = 0; // undefined, maybe nan?
 209              		.loc 1 18 0
 210 010a 0022     		movs	r2, #0
 211 010c 0023     		movs	r3, #0
 212 010e A260     		str	r2, [r4, #8]
 213 0110 E360     		str	r3, [r4, #12]
  19:Src/sk6812.c  ****         return out;
 214              		.loc 1 19 0
 215 0112 2260     		str	r2, [r4]
 216 0114 6360     		str	r3, [r4, #4]
 217              	.LVL22:
 218              	.L1:
  36:Src/sk6812.c  ****     else
  37:Src/sk6812.c  ****         out.h = 4.0 + ( in.r - in.g ) / delta;  // between magenta & cyan
  38:Src/sk6812.c  **** 
  39:Src/sk6812.c  ****     out.h *= 60.0;                              // degrees
  40:Src/sk6812.c  **** 
  41:Src/sk6812.c  ****     if( out.h < 0.0 )
  42:Src/sk6812.c  ****         out.h += 360.0;
  43:Src/sk6812.c  **** 
  44:Src/sk6812.c  ****     return out;
  45:Src/sk6812.c  **** }
 219              		.loc 1 45 0
 220 0116 2000     		movs	r0, r4
 221 0118 08B0     		add	sp, sp, #32
 222              	.LVL23:
 223              		@ sp needed
 224              	.LVL24:
 225 011a D0BC     		pop	{r4, r6, r7}
 226 011c 08BC     		pop	{r3}
 227 011e 02B0     		add	sp, sp, #8
 228 0120 1847     		bx	r3
 229              	.LVL25:
 230              	.L35:
  27:Src/sk6812.c  ****         out.h = 0.0;                            // its now undefined
 231              		.loc 1 27 0
 232 0122 0022     		movs	r2, #0
 233 0124 0023     		movs	r3, #0
 234 0126 A260     		str	r2, [r4, #8]
 235 0128 E360     		str	r3, [r4, #12]
  28:Src/sk6812.c  ****         return out;
 236              		.loc 1 28 0
ARM GAS  /tmp/ccgIfHGI.s 			page 6


 237 012a 2260     		str	r2, [r4]
 238 012c 6360     		str	r3, [r4, #4]
  29:Src/sk6812.c  ****     }
 239              		.loc 1 29 0
 240 012e F2E7     		b	.L1
 241              	.L15:
  32:Src/sk6812.c  ****     else
 242              		.loc 1 32 0
 243 0130 049A     		ldr	r2, [sp, #16]
 244 0132 059B     		ldr	r3, [sp, #20]
 245 0134 0298     		ldr	r0, [sp, #8]
 246 0136 0399     		ldr	r1, [sp, #12]
 247 0138 FFF7FEFF 		bl	__aeabi_dsub
 248              	.LVL26:
 249 013c 009A     		ldr	r2, [sp]
 250 013e 019B     		ldr	r3, [sp, #4]
 251 0140 FFF7FEFF 		bl	__aeabi_ddiv
 252              	.LVL27:
 253 0144 2060     		str	r0, [r4]
 254 0146 6160     		str	r1, [r4, #4]
 255              	.L17:
  39:Src/sk6812.c  **** 
 256              		.loc 1 39 0
 257 0148 0022     		movs	r2, #0
 258 014a 164B     		ldr	r3, .L39+8
 259 014c 2068     		ldr	r0, [r4]
 260 014e 6168     		ldr	r1, [r4, #4]
 261 0150 FFF7FEFF 		bl	__aeabi_dmul
 262              	.LVL28:
 263 0154 0600     		movs	r6, r0
 264              	.LVL29:
 265 0156 0F00     		movs	r7, r1
 266 0158 2660     		str	r6, [r4]
 267 015a 6760     		str	r7, [r4, #4]
  41:Src/sk6812.c  ****         out.h += 360.0;
 268              		.loc 1 41 0
 269 015c 0022     		movs	r2, #0
 270 015e 0023     		movs	r3, #0
 271 0160 FFF7FEFF 		bl	__aeabi_dcmplt
 272              	.LVL30:
 273 0164 0028     		cmp	r0, #0
 274 0166 D6D0     		beq	.L1
  42:Src/sk6812.c  **** 
 275              		.loc 1 42 0
 276 0168 0022     		movs	r2, #0
 277 016a 0F4B     		ldr	r3, .L39+12
 278 016c 3000     		movs	r0, r6
 279 016e 3900     		movs	r1, r7
 280 0170 FFF7FEFF 		bl	__aeabi_dadd
 281              	.LVL31:
 282 0174 2060     		str	r0, [r4]
 283 0176 6160     		str	r1, [r4, #4]
  44:Src/sk6812.c  **** }
 284              		.loc 1 44 0
 285 0178 CDE7     		b	.L1
 286              	.LVL32:
 287              	.L37:
ARM GAS  /tmp/ccgIfHGI.s 			page 7


  37:Src/sk6812.c  **** 
 288              		.loc 1 37 0
 289 017a 029A     		ldr	r2, [sp, #8]
 290 017c 039B     		ldr	r3, [sp, #12]
 291 017e 0698     		ldr	r0, [sp, #24]
 292 0180 0799     		ldr	r1, [sp, #28]
 293 0182 FFF7FEFF 		bl	__aeabi_dsub
 294              	.LVL33:
 295 0186 009A     		ldr	r2, [sp]
 296 0188 019B     		ldr	r3, [sp, #4]
 297 018a FFF7FEFF 		bl	__aeabi_ddiv
 298              	.LVL34:
 299 018e 0022     		movs	r2, #0
 300 0190 064B     		ldr	r3, .L39+16
 301 0192 FFF7FEFF 		bl	__aeabi_dadd
 302              	.LVL35:
 303 0196 2060     		str	r0, [r4]
 304 0198 6160     		str	r1, [r4, #4]
 305 019a D5E7     		b	.L17
 306              	.L40:
 307              		.align	2
 308              	.L39:
 309 019c F168E388 		.word	-1998362383
 310 01a0 B5F8E43E 		.word	1055193269
 311 01a4 00004E40 		.word	1078853632
 312 01a8 00807640 		.word	1081507840
 313 01ac 00001040 		.word	1074790400
 314              		.cfi_endproc
 315              	.LFE40:
 317              		.global	__aeabi_dcmple
 318              		.global	__aeabi_d2iz
 319              		.global	__aeabi_i2d
 320              		.section	.text.hsv2rgb,"ax",%progbits
 321              		.align	1
 322              		.global	hsv2rgb
 323              		.syntax unified
 324              		.code	16
 325              		.thumb_func
 326              		.fpu softvfp
 328              	hsv2rgb:
 329              	.LFB41:
  46:Src/sk6812.c  **** 
  47:Src/sk6812.c  **** 
  48:Src/sk6812.c  **** rgb hsv2rgb(hsv in)
  49:Src/sk6812.c  **** {
 330              		.loc 1 49 0
 331              		.cfi_startproc
 332              		@ args = 24, pretend = 8, frame = 32
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              	.LVL36:
 335 0000 82B0     		sub	sp, sp, #8
 336              	.LCFI3:
 337              		.cfi_def_cfa_offset 8
 338 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 339              	.LCFI4:
 340              		.cfi_def_cfa_offset 28
 341              		.cfi_offset 4, -28
ARM GAS  /tmp/ccgIfHGI.s 			page 8


 342              		.cfi_offset 5, -24
 343              		.cfi_offset 6, -20
 344              		.cfi_offset 7, -16
 345              		.cfi_offset 14, -12
 346 0004 89B0     		sub	sp, sp, #36
 347              	.LCFI5:
 348              		.cfi_def_cfa_offset 64
 349 0006 0600     		movs	r6, r0
 350 0008 0E92     		str	r2, [sp, #56]
 351 000a 0F93     		str	r3, [sp, #60]
  50:Src/sk6812.c  ****     double      hh, p, q, t, ff;
  51:Src/sk6812.c  ****     long        i;
  52:Src/sk6812.c  ****     rgb         out;
  53:Src/sk6812.c  **** 
  54:Src/sk6812.c  ****     if(in.s <= 0.0) { 
 352              		.loc 1 54 0
 353 000c 109B     		ldr	r3, [sp, #64]
 354 000e 119C     		ldr	r4, [sp, #68]
 355 0010 1800     		movs	r0, r3
 356              	.LVL37:
 357 0012 2100     		movs	r1, r4
 358 0014 0090     		str	r0, [sp]
 359 0016 0191     		str	r1, [sp, #4]
 360 0018 0022     		movs	r2, #0
 361 001a 0023     		movs	r3, #0
 362 001c FFF7FEFF 		bl	__aeabi_dcmple
 363              	.LVL38:
 364 0020 0028     		cmp	r0, #0
 365 0022 62D1     		bne	.L57
  55:Src/sk6812.c  ****         out.r = in.v;
  56:Src/sk6812.c  ****         out.g = in.v;
  57:Src/sk6812.c  ****         out.b = in.v;
  58:Src/sk6812.c  ****         return out;
  59:Src/sk6812.c  ****     }
  60:Src/sk6812.c  ****     hh = in.h;
 366              		.loc 1 60 0
 367 0024 0E9C     		ldr	r4, [sp, #56]
 368 0026 0F9D     		ldr	r5, [sp, #60]
 369              	.LVL39:
  61:Src/sk6812.c  ****     if(hh >= 360.0) hh = 0.0;
 370              		.loc 1 61 0
 371 0028 0022     		movs	r2, #0
 372 002a 554B     		ldr	r3, .L58
 373 002c 2000     		movs	r0, r4
 374 002e 2900     		movs	r1, r5
 375 0030 FFF7FEFF 		bl	__aeabi_dcmpge
 376              	.LVL40:
 377 0034 0028     		cmp	r0, #0
 378 0036 01D0     		beq	.L45
 379 0038 0024     		movs	r4, #0
 380              	.LVL41:
 381 003a 0025     		movs	r5, #0
 382              	.L45:
 383              	.LVL42:
  62:Src/sk6812.c  ****     hh /= 60.0;
 384              		.loc 1 62 0
 385 003c 0022     		movs	r2, #0
ARM GAS  /tmp/ccgIfHGI.s 			page 9


 386 003e 514B     		ldr	r3, .L58+4
 387 0040 2000     		movs	r0, r4
 388 0042 2900     		movs	r1, r5
 389 0044 FFF7FEFF 		bl	__aeabi_ddiv
 390              	.LVL43:
 391 0048 0400     		movs	r4, r0
 392              	.LVL44:
 393 004a 0D00     		movs	r5, r1
 394              	.LVL45:
  63:Src/sk6812.c  ****     i = (long)hh;
 395              		.loc 1 63 0
 396 004c FFF7FEFF 		bl	__aeabi_d2iz
 397              	.LVL46:
 398 0050 0700     		movs	r7, r0
 399              	.LVL47:
  64:Src/sk6812.c  ****     ff = hh - i;
 400              		.loc 1 64 0
 401 0052 FFF7FEFF 		bl	__aeabi_i2d
 402              	.LVL48:
 403 0056 0200     		movs	r2, r0
 404 0058 0B00     		movs	r3, r1
 405 005a 2000     		movs	r0, r4
 406 005c 2900     		movs	r1, r5
 407 005e FFF7FEFF 		bl	__aeabi_dsub
 408              	.LVL49:
 409 0062 0290     		str	r0, [sp, #8]
 410 0064 0391     		str	r1, [sp, #12]
 411              	.LVL50:
  65:Src/sk6812.c  ****     p = in.v * (1.0 - in.s);
 412              		.loc 1 65 0
 413 0066 129C     		ldr	r4, [sp, #72]
 414 0068 139D     		ldr	r5, [sp, #76]
 415              	.LVL51:
 416 006a 009A     		ldr	r2, [sp]
 417 006c 019B     		ldr	r3, [sp, #4]
 418 006e 0020     		movs	r0, #0
 419              	.LVL52:
 420 0070 4549     		ldr	r1, .L58+8
 421 0072 FFF7FEFF 		bl	__aeabi_dsub
 422              	.LVL53:
 423 0076 0200     		movs	r2, r0
 424 0078 0B00     		movs	r3, r1
 425 007a 2000     		movs	r0, r4
 426 007c 2900     		movs	r1, r5
 427 007e FFF7FEFF 		bl	__aeabi_dmul
 428              	.LVL54:
 429 0082 0490     		str	r0, [sp, #16]
 430 0084 0591     		str	r1, [sp, #20]
 431              	.LVL55:
  66:Src/sk6812.c  ****     q = in.v * (1.0 - (in.s * ff));
 432              		.loc 1 66 0
 433 0086 029A     		ldr	r2, [sp, #8]
 434 0088 039B     		ldr	r3, [sp, #12]
 435 008a 0098     		ldr	r0, [sp]
 436 008c 0199     		ldr	r1, [sp, #4]
 437              	.LVL56:
 438 008e FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  /tmp/ccgIfHGI.s 			page 10


 439              	.LVL57:
 440 0092 0200     		movs	r2, r0
 441 0094 0B00     		movs	r3, r1
 442 0096 0020     		movs	r0, #0
 443 0098 3B49     		ldr	r1, .L58+8
 444 009a FFF7FEFF 		bl	__aeabi_dsub
 445              	.LVL58:
 446 009e 0200     		movs	r2, r0
 447 00a0 0B00     		movs	r3, r1
 448 00a2 2000     		movs	r0, r4
 449 00a4 2900     		movs	r1, r5
 450 00a6 FFF7FEFF 		bl	__aeabi_dmul
 451              	.LVL59:
 452 00aa 0690     		str	r0, [sp, #24]
 453 00ac 0791     		str	r1, [sp, #28]
 454              	.LVL60:
  67:Src/sk6812.c  ****     t = in.v * (1.0 - (in.s * (1.0 - ff)));
 455              		.loc 1 67 0
 456 00ae 029A     		ldr	r2, [sp, #8]
 457 00b0 039B     		ldr	r3, [sp, #12]
 458 00b2 0020     		movs	r0, #0
 459              	.LVL61:
 460 00b4 3449     		ldr	r1, .L58+8
 461 00b6 FFF7FEFF 		bl	__aeabi_dsub
 462              	.LVL62:
 463 00ba 0200     		movs	r2, r0
 464 00bc 0B00     		movs	r3, r1
 465 00be 0098     		ldr	r0, [sp]
 466 00c0 0199     		ldr	r1, [sp, #4]
 467 00c2 FFF7FEFF 		bl	__aeabi_dmul
 468              	.LVL63:
 469 00c6 0200     		movs	r2, r0
 470 00c8 0B00     		movs	r3, r1
 471 00ca 0020     		movs	r0, #0
 472 00cc 2E49     		ldr	r1, .L58+8
 473 00ce FFF7FEFF 		bl	__aeabi_dsub
 474              	.LVL64:
 475 00d2 0200     		movs	r2, r0
 476 00d4 0B00     		movs	r3, r1
 477 00d6 2000     		movs	r0, r4
 478 00d8 2900     		movs	r1, r5
 479 00da FFF7FEFF 		bl	__aeabi_dmul
 480              	.LVL65:
  68:Src/sk6812.c  **** 
  69:Src/sk6812.c  ****     switch(i) {
 481              		.loc 1 69 0
 482 00de 042F     		cmp	r7, #4
 483 00e0 42D8     		bhi	.L46
 484 00e2 BB00     		lsls	r3, r7, #2
 485 00e4 294A     		ldr	r2, .L58+12
 486 00e6 D358     		ldr	r3, [r2, r3]
 487 00e8 9F46     		mov	pc, r3
 488              		.section	.rodata.hsv2rgb,"a",%progbits
 489              		.align	2
 490              	.L48:
 491 0000 06010000 		.word	.L47
 492 0004 18010000 		.word	.L49
ARM GAS  /tmp/ccgIfHGI.s 			page 11


 493 0008 2E010000 		.word	.L50
 494 000c 40010000 		.word	.L51
 495 0010 56010000 		.word	.L52
 496              		.section	.text.hsv2rgb
 497              	.LVL66:
 498              	.L57:
  55:Src/sk6812.c  ****         out.g = in.v;
 499              		.loc 1 55 0
 500 00ea 129A     		ldr	r2, [sp, #72]
 501 00ec 139B     		ldr	r3, [sp, #76]
 502 00ee B260     		str	r2, [r6, #8]
 503 00f0 F360     		str	r3, [r6, #12]
  56:Src/sk6812.c  ****         out.b = in.v;
 504              		.loc 1 56 0
 505 00f2 3260     		str	r2, [r6]
 506 00f4 7360     		str	r3, [r6, #4]
  57:Src/sk6812.c  ****         return out;
 507              		.loc 1 57 0
 508 00f6 3261     		str	r2, [r6, #16]
 509 00f8 7361     		str	r3, [r6, #20]
 510              	.L41:
  70:Src/sk6812.c  ****     case 0:
  71:Src/sk6812.c  ****         out.r = in.v;
  72:Src/sk6812.c  ****         out.g = t;
  73:Src/sk6812.c  ****         out.b = p;
  74:Src/sk6812.c  ****         break;
  75:Src/sk6812.c  ****     case 1:
  76:Src/sk6812.c  ****         out.r = q;
  77:Src/sk6812.c  ****         out.g = in.v;
  78:Src/sk6812.c  ****         out.b = p;
  79:Src/sk6812.c  ****         break;
  80:Src/sk6812.c  ****     case 2:
  81:Src/sk6812.c  ****         out.r = p;
  82:Src/sk6812.c  ****         out.g = in.v;
  83:Src/sk6812.c  ****         out.b = t;
  84:Src/sk6812.c  ****         break;
  85:Src/sk6812.c  **** 
  86:Src/sk6812.c  ****     case 3:
  87:Src/sk6812.c  ****         out.r = p;
  88:Src/sk6812.c  ****         out.g = q;
  89:Src/sk6812.c  ****         out.b = in.v;
  90:Src/sk6812.c  ****         break;
  91:Src/sk6812.c  ****     case 4:
  92:Src/sk6812.c  ****         out.r = t;
  93:Src/sk6812.c  ****         out.g = p;
  94:Src/sk6812.c  ****         out.b = in.v;
  95:Src/sk6812.c  ****         break;
  96:Src/sk6812.c  ****     case 5:
  97:Src/sk6812.c  ****     default:
  98:Src/sk6812.c  ****         out.r = in.v;
  99:Src/sk6812.c  ****         out.g = p;
 100:Src/sk6812.c  ****         out.b = q;
 101:Src/sk6812.c  ****         break;
 102:Src/sk6812.c  ****     }
 103:Src/sk6812.c  ****     return out;
 104:Src/sk6812.c  **** }
 511              		.loc 1 104 0
ARM GAS  /tmp/ccgIfHGI.s 			page 12


 512 00fa 3000     		movs	r0, r6
 513 00fc 09B0     		add	sp, sp, #36
 514              		@ sp needed
 515              	.LVL67:
 516 00fe F0BC     		pop	{r4, r5, r6, r7}
 517 0100 08BC     		pop	{r3}
 518 0102 02B0     		add	sp, sp, #8
 519 0104 1847     		bx	r3
 520              	.LVL68:
 521              	.L47:
  71:Src/sk6812.c  ****         out.g = t;
 522              		.loc 1 71 0
 523 0106 B460     		str	r4, [r6, #8]
 524 0108 F560     		str	r5, [r6, #12]
  72:Src/sk6812.c  ****         out.b = p;
 525              		.loc 1 72 0
 526 010a 3060     		str	r0, [r6]
 527 010c 7160     		str	r1, [r6, #4]
  73:Src/sk6812.c  ****         break;
 528              		.loc 1 73 0
 529 010e 049B     		ldr	r3, [sp, #16]
 530 0110 059C     		ldr	r4, [sp, #20]
 531 0112 3361     		str	r3, [r6, #16]
 532 0114 7461     		str	r4, [r6, #20]
  74:Src/sk6812.c  ****     case 1:
 533              		.loc 1 74 0
 534 0116 F0E7     		b	.L41
 535              	.L49:
  76:Src/sk6812.c  ****         out.g = in.v;
 536              		.loc 1 76 0
 537 0118 069A     		ldr	r2, [sp, #24]
 538 011a 079B     		ldr	r3, [sp, #28]
 539 011c B260     		str	r2, [r6, #8]
 540 011e F360     		str	r3, [r6, #12]
  77:Src/sk6812.c  ****         out.b = p;
 541              		.loc 1 77 0
 542 0120 3460     		str	r4, [r6]
 543 0122 7560     		str	r5, [r6, #4]
  78:Src/sk6812.c  ****         break;
 544              		.loc 1 78 0
 545 0124 049B     		ldr	r3, [sp, #16]
 546 0126 059C     		ldr	r4, [sp, #20]
 547 0128 3361     		str	r3, [r6, #16]
 548 012a 7461     		str	r4, [r6, #20]
  79:Src/sk6812.c  ****     case 2:
 549              		.loc 1 79 0
 550 012c E5E7     		b	.L41
 551              	.L50:
  81:Src/sk6812.c  ****         out.g = in.v;
 552              		.loc 1 81 0
 553 012e 049A     		ldr	r2, [sp, #16]
 554 0130 059B     		ldr	r3, [sp, #20]
 555 0132 B260     		str	r2, [r6, #8]
 556 0134 F360     		str	r3, [r6, #12]
  82:Src/sk6812.c  ****         out.b = t;
 557              		.loc 1 82 0
 558 0136 3460     		str	r4, [r6]
ARM GAS  /tmp/ccgIfHGI.s 			page 13


 559 0138 7560     		str	r5, [r6, #4]
  83:Src/sk6812.c  ****         break;
 560              		.loc 1 83 0
 561 013a 3061     		str	r0, [r6, #16]
 562 013c 7161     		str	r1, [r6, #20]
  84:Src/sk6812.c  **** 
 563              		.loc 1 84 0
 564 013e DCE7     		b	.L41
 565              	.L51:
  87:Src/sk6812.c  ****         out.g = q;
 566              		.loc 1 87 0
 567 0140 049A     		ldr	r2, [sp, #16]
 568 0142 059B     		ldr	r3, [sp, #20]
 569 0144 B260     		str	r2, [r6, #8]
 570 0146 F360     		str	r3, [r6, #12]
  88:Src/sk6812.c  ****         out.b = in.v;
 571              		.loc 1 88 0
 572 0148 069A     		ldr	r2, [sp, #24]
 573 014a 079B     		ldr	r3, [sp, #28]
 574 014c 3260     		str	r2, [r6]
 575 014e 7360     		str	r3, [r6, #4]
  89:Src/sk6812.c  ****         break;
 576              		.loc 1 89 0
 577 0150 3461     		str	r4, [r6, #16]
 578 0152 7561     		str	r5, [r6, #20]
  90:Src/sk6812.c  ****     case 4:
 579              		.loc 1 90 0
 580 0154 D1E7     		b	.L41
 581              	.L52:
  92:Src/sk6812.c  ****         out.g = p;
 582              		.loc 1 92 0
 583 0156 B060     		str	r0, [r6, #8]
 584 0158 F160     		str	r1, [r6, #12]
  93:Src/sk6812.c  ****         out.b = in.v;
 585              		.loc 1 93 0
 586 015a 049A     		ldr	r2, [sp, #16]
 587 015c 059B     		ldr	r3, [sp, #20]
 588 015e 3260     		str	r2, [r6]
 589 0160 7360     		str	r3, [r6, #4]
  94:Src/sk6812.c  ****         break;
 590              		.loc 1 94 0
 591 0162 3461     		str	r4, [r6, #16]
 592 0164 7561     		str	r5, [r6, #20]
  95:Src/sk6812.c  ****     case 5:
 593              		.loc 1 95 0
 594 0166 C8E7     		b	.L41
 595              	.L46:
  98:Src/sk6812.c  ****         out.g = p;
 596              		.loc 1 98 0
 597 0168 B460     		str	r4, [r6, #8]
 598 016a F560     		str	r5, [r6, #12]
  99:Src/sk6812.c  ****         out.b = q;
 599              		.loc 1 99 0
 600 016c 049B     		ldr	r3, [sp, #16]
 601 016e 059C     		ldr	r4, [sp, #20]
 602 0170 3360     		str	r3, [r6]
 603 0172 7460     		str	r4, [r6, #4]
ARM GAS  /tmp/ccgIfHGI.s 			page 14


 100:Src/sk6812.c  ****         break;
 604              		.loc 1 100 0
 605 0174 069B     		ldr	r3, [sp, #24]
 606 0176 079C     		ldr	r4, [sp, #28]
 607 0178 3361     		str	r3, [r6, #16]
 608 017a 7461     		str	r4, [r6, #20]
 103:Src/sk6812.c  **** }
 609              		.loc 1 103 0
 610 017c BDE7     		b	.L41
 611              	.L59:
 612 017e C046     		.align	2
 613              	.L58:
 614 0180 00807640 		.word	1081507840
 615 0184 00004E40 		.word	1078853632
 616 0188 0000F03F 		.word	1072693248
 617 018c 00000000 		.word	.L48
 618              		.cfi_endproc
 619              	.LFE41:
 621              		.section	.text.set_pixel,"ax",%progbits
 622              		.align	1
 623              		.global	set_pixel
 624              		.syntax unified
 625              		.code	16
 626              		.thumb_func
 627              		.fpu softvfp
 629              	set_pixel:
 630              	.LFB42:
 105:Src/sk6812.c  **** 
 106:Src/sk6812.c  **** void set_pixel(uint16_t led, rgb in,uint16_t *_write_buffer) {
 631              		.loc 1 106 0
 632              		.cfi_startproc
 633              		@ args = 28, pretend = 8, frame = 0
 634              		@ frame_needed = 0, uses_anonymous_args = 0
 635              	.LVL69:
 636 0000 82B0     		sub	sp, sp, #8
 637              	.LCFI6:
 638              		.cfi_def_cfa_offset 8
 639 0002 70B5     		push	{r4, r5, r6, lr}
 640              	.LCFI7:
 641              		.cfi_def_cfa_offset 24
 642              		.cfi_offset 4, -24
 643              		.cfi_offset 5, -20
 644              		.cfi_offset 6, -16
 645              		.cfi_offset 14, -12
 646 0004 0400     		movs	r4, r0
 647 0006 0492     		str	r2, [sp, #16]
 648 0008 0593     		str	r3, [sp, #20]
 649 000a 0A9D     		ldr	r5, [sp, #40]
 107:Src/sk6812.c  **** 	//r
 108:Src/sk6812.c  **** 	_write_buffer[((led)*24)+0] = ((int)(in.g*255) & 0x80) ? LED_CMPH:LED_CMPL;
 650              		.loc 1 108 0
 651 000c 0022     		movs	r2, #0
 652 000e 714B     		ldr	r3, .L110
 653 0010 0498     		ldr	r0, [sp, #16]
 654 0012 0599     		ldr	r1, [sp, #20]
 655              	.LVL70:
 656 0014 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  /tmp/ccgIfHGI.s 			page 15


 657              	.LVL71:
 658 0018 FFF7FEFF 		bl	__aeabi_d2iz
 659              	.LVL72:
 660 001c 0306     		lsls	r3, r0, #24
 661 001e 00D4     		bmi	.LCB537
 662 0020 A8E0     		b	.L85	@long jump
 663              	.LCB537:
 664 0022 2222     		movs	r2, #34
 665              	.L61:
 666              		.loc 1 108 0 is_stmt 0 discriminator 4
 667 0024 6300     		lsls	r3, r4, #1
 668 0026 1B19     		adds	r3, r3, r4
 669 0028 1C01     		lsls	r4, r3, #4
 670 002a 2A53     		strh	r2, [r5, r4]
 109:Src/sk6812.c  **** 	_write_buffer[((led)*24)+1] = ((int)(in.g*255) & 0x40) ? LED_CMPH:LED_CMPL;
 671              		.loc 1 109 0 is_stmt 1 discriminator 4
 672 002c 4306     		lsls	r3, r0, #25
 673 002e 00D4     		bmi	.LCB549
 674 0030 A2E0     		b	.L86	@long jump
 675              	.LCB549:
 676              		.loc 1 109 0 is_stmt 0
 677 0032 2222     		movs	r2, #34
 678              	.L62:
 679              		.loc 1 109 0 discriminator 4
 680 0034 A31C     		adds	r3, r4, #2
 681 0036 EA52     		strh	r2, [r5, r3]
 110:Src/sk6812.c  **** 	_write_buffer[((led)*24)+2] = ((int)(in.g*255) & 0x20) ? LED_CMPH:LED_CMPL;
 682              		.loc 1 110 0 is_stmt 1 discriminator 4
 683 0038 8306     		lsls	r3, r0, #26
 684 003a 00D4     		bmi	.LCB559
 685 003c 9EE0     		b	.L87	@long jump
 686              	.LCB559:
 687              		.loc 1 110 0 is_stmt 0
 688 003e 2222     		movs	r2, #34
 689              	.L63:
 690              		.loc 1 110 0 discriminator 4
 691 0040 231D     		adds	r3, r4, #4
 692 0042 EA52     		strh	r2, [r5, r3]
 111:Src/sk6812.c  **** 	_write_buffer[((led)*24)+3] = ((int)(in.g*255) & 0x10) ? LED_CMPH:LED_CMPL;
 693              		.loc 1 111 0 is_stmt 1 discriminator 4
 694 0044 C306     		lsls	r3, r0, #27
 695 0046 00D4     		bmi	.LCB569
 696 0048 9AE0     		b	.L88	@long jump
 697              	.LCB569:
 698              		.loc 1 111 0 is_stmt 0
 699 004a 2222     		movs	r2, #34
 700              	.L64:
 701              		.loc 1 111 0 discriminator 4
 702 004c A31D     		adds	r3, r4, #6
 703 004e EA52     		strh	r2, [r5, r3]
 112:Src/sk6812.c  **** 	_write_buffer[((led)*24)+4] = ((int)(in.g*255) & 0x08) ? LED_CMPH:LED_CMPL;
 704              		.loc 1 112 0 is_stmt 1 discriminator 4
 705 0050 0307     		lsls	r3, r0, #28
 706 0052 00D4     		bmi	.LCB579
 707 0054 96E0     		b	.L89	@long jump
 708              	.LCB579:
 709              		.loc 1 112 0 is_stmt 0
ARM GAS  /tmp/ccgIfHGI.s 			page 16


 710 0056 2222     		movs	r2, #34
 711              	.L65:
 712              		.loc 1 112 0 discriminator 4
 713 0058 2300     		movs	r3, r4
 714 005a 0833     		adds	r3, r3, #8
 715 005c EA52     		strh	r2, [r5, r3]
 113:Src/sk6812.c  **** 	_write_buffer[((led)*24)+5] = ((int)(in.g*255) & 0x04) ? LED_CMPH:LED_CMPL;
 716              		.loc 1 113 0 is_stmt 1 discriminator 4
 717 005e 4307     		lsls	r3, r0, #29
 718 0060 00D4     		bmi	.LCB590
 719 0062 91E0     		b	.L90	@long jump
 720              	.LCB590:
 721              		.loc 1 113 0 is_stmt 0
 722 0064 2222     		movs	r2, #34
 723              	.L66:
 724              		.loc 1 113 0 discriminator 4
 725 0066 2300     		movs	r3, r4
 726 0068 0A33     		adds	r3, r3, #10
 727 006a EA52     		strh	r2, [r5, r3]
 114:Src/sk6812.c  **** 	_write_buffer[((led)*24)+6] = ((int)(in.g*255) & 0x02) ? LED_CMPH:LED_CMPL;
 728              		.loc 1 114 0 is_stmt 1 discriminator 4
 729 006c 8307     		lsls	r3, r0, #30
 730 006e 00D4     		bmi	.LCB601
 731 0070 8CE0     		b	.L91	@long jump
 732              	.LCB601:
 733              		.loc 1 114 0 is_stmt 0
 734 0072 2222     		movs	r2, #34
 735              	.L67:
 736              		.loc 1 114 0 discriminator 4
 737 0074 2300     		movs	r3, r4
 738 0076 0C33     		adds	r3, r3, #12
 739 0078 EA52     		strh	r2, [r5, r3]
 115:Src/sk6812.c  **** 	_write_buffer[((led)*24)+7] = ((int)(in.g*255) & 0x01) ? LED_CMPH:LED_CMPL;
 740              		.loc 1 115 0 is_stmt 1 discriminator 4
 741 007a C307     		lsls	r3, r0, #31
 742 007c 00D4     		bmi	.LCB612
 743 007e 87E0     		b	.L92	@long jump
 744              	.LCB612:
 745              		.loc 1 115 0 is_stmt 0
 746 0080 2222     		movs	r2, #34
 747              	.L68:
 748              		.loc 1 115 0 discriminator 4
 749 0082 2300     		movs	r3, r4
 750 0084 0E33     		adds	r3, r3, #14
 751 0086 EA52     		strh	r2, [r5, r3]
 116:Src/sk6812.c  **** 	//g
 117:Src/sk6812.c  **** 	_write_buffer[((led)*24)+8]  = ((int)(in.r*255) & 0x80) ? LED_CMPH:LED_CMPL;
 752              		.loc 1 117 0 is_stmt 1 discriminator 4
 753 0088 0022     		movs	r2, #0
 754 008a 524B     		ldr	r3, .L110
 755 008c 0698     		ldr	r0, [sp, #24]
 756 008e 0799     		ldr	r1, [sp, #28]
 757 0090 FFF7FEFF 		bl	__aeabi_dmul
 758              	.LVL73:
 759 0094 FFF7FEFF 		bl	__aeabi_d2iz
 760              	.LVL74:
 761 0098 0306     		lsls	r3, r0, #24
ARM GAS  /tmp/ccgIfHGI.s 			page 17


 762 009a 00D4     		bmi	.LCB630
 763 009c 7AE0     		b	.L93	@long jump
 764              	.LCB630:
 765              		.loc 1 117 0 is_stmt 0
 766 009e 2222     		movs	r2, #34
 767              	.L69:
 768              		.loc 1 117 0 discriminator 4
 769 00a0 2300     		movs	r3, r4
 770 00a2 1033     		adds	r3, r3, #16
 771 00a4 EA52     		strh	r2, [r5, r3]
 118:Src/sk6812.c  **** 	_write_buffer[((led)*24)+9]  = ((int)(in.r*255) & 0x40) ? LED_CMPH:LED_CMPL;
 772              		.loc 1 118 0 is_stmt 1 discriminator 4
 773 00a6 4306     		lsls	r3, r0, #25
 774 00a8 00D4     		bmi	.LCB641
 775 00aa 75E0     		b	.L94	@long jump
 776              	.LCB641:
 777              		.loc 1 118 0 is_stmt 0
 778 00ac 2222     		movs	r2, #34
 779              	.L70:
 780              		.loc 1 118 0 discriminator 4
 781 00ae 2300     		movs	r3, r4
 782 00b0 1233     		adds	r3, r3, #18
 783 00b2 EA52     		strh	r2, [r5, r3]
 119:Src/sk6812.c  **** 	_write_buffer[((led)*24)+10] = ((int)(in.r*255) & 0x20) ? LED_CMPH:LED_CMPL;
 784              		.loc 1 119 0 is_stmt 1 discriminator 4
 785 00b4 8306     		lsls	r3, r0, #26
 786 00b6 00D4     		bmi	.LCB652
 787 00b8 70E0     		b	.L95	@long jump
 788              	.LCB652:
 789              		.loc 1 119 0 is_stmt 0
 790 00ba 2222     		movs	r2, #34
 791              	.L71:
 792              		.loc 1 119 0 discriminator 4
 793 00bc 2300     		movs	r3, r4
 794 00be 1433     		adds	r3, r3, #20
 795 00c0 EA52     		strh	r2, [r5, r3]
 120:Src/sk6812.c  **** 	_write_buffer[((led)*24)+11] = ((int)(in.r*255) & 0x10) ? LED_CMPH:LED_CMPL;
 796              		.loc 1 120 0 is_stmt 1 discriminator 4
 797 00c2 C306     		lsls	r3, r0, #27
 798 00c4 6CD5     		bpl	.L96
 799              		.loc 1 120 0 is_stmt 0
 800 00c6 2222     		movs	r2, #34
 801              	.L72:
 802              		.loc 1 120 0 discriminator 4
 803 00c8 2300     		movs	r3, r4
 804 00ca 1633     		adds	r3, r3, #22
 805 00cc EA52     		strh	r2, [r5, r3]
 121:Src/sk6812.c  **** 	_write_buffer[((led)*24)+12] = ((int)(in.r*255) & 0x08) ? LED_CMPH:LED_CMPL;
 806              		.loc 1 121 0 is_stmt 1 discriminator 4
 807 00ce 0307     		lsls	r3, r0, #28
 808 00d0 68D5     		bpl	.L97
 809              		.loc 1 121 0 is_stmt 0
 810 00d2 2222     		movs	r2, #34
 811              	.L73:
 812              		.loc 1 121 0 discriminator 4
 813 00d4 2300     		movs	r3, r4
 814 00d6 1833     		adds	r3, r3, #24
ARM GAS  /tmp/ccgIfHGI.s 			page 18


 815 00d8 EA52     		strh	r2, [r5, r3]
 122:Src/sk6812.c  **** 	_write_buffer[((led)*24)+13] = ((int)(in.r*255) & 0x04) ? LED_CMPH:LED_CMPL;
 816              		.loc 1 122 0 is_stmt 1 discriminator 4
 817 00da 4307     		lsls	r3, r0, #29
 818 00dc 64D5     		bpl	.L98
 819              		.loc 1 122 0 is_stmt 0
 820 00de 2222     		movs	r2, #34
 821              	.L74:
 822              		.loc 1 122 0 discriminator 4
 823 00e0 2300     		movs	r3, r4
 824 00e2 1A33     		adds	r3, r3, #26
 825 00e4 EA52     		strh	r2, [r5, r3]
 123:Src/sk6812.c  **** 	_write_buffer[((led)*24)+14] = ((int)(in.r*255) & 0x02) ? LED_CMPH:LED_CMPL;
 826              		.loc 1 123 0 is_stmt 1 discriminator 4
 827 00e6 8307     		lsls	r3, r0, #30
 828 00e8 60D5     		bpl	.L99
 829              		.loc 1 123 0 is_stmt 0
 830 00ea 2222     		movs	r2, #34
 831              	.L75:
 832              		.loc 1 123 0 discriminator 4
 833 00ec 2300     		movs	r3, r4
 834 00ee 1C33     		adds	r3, r3, #28
 835 00f0 EA52     		strh	r2, [r5, r3]
 124:Src/sk6812.c  **** 	_write_buffer[((led)*24)+15] = ((int)(in.r*255) & 0x01) ? LED_CMPH:LED_CMPL;
 836              		.loc 1 124 0 is_stmt 1 discriminator 4
 837 00f2 C307     		lsls	r3, r0, #31
 838 00f4 5CD5     		bpl	.L100
 839              		.loc 1 124 0 is_stmt 0
 840 00f6 2222     		movs	r2, #34
 841              	.L76:
 842              		.loc 1 124 0 discriminator 4
 843 00f8 2300     		movs	r3, r4
 844 00fa 1E33     		adds	r3, r3, #30
 845 00fc EA52     		strh	r2, [r5, r3]
 125:Src/sk6812.c  **** 	//b
 126:Src/sk6812.c  **** 	_write_buffer[((led)*24)+16] = ((int)(in.b*255) & 0x80) ? LED_CMPH:LED_CMPL;
 846              		.loc 1 126 0 is_stmt 1 discriminator 4
 847 00fe 0022     		movs	r2, #0
 848 0100 344B     		ldr	r3, .L110
 849 0102 0898     		ldr	r0, [sp, #32]
 850 0104 0999     		ldr	r1, [sp, #36]
 851 0106 FFF7FEFF 		bl	__aeabi_dmul
 852              	.LVL75:
 853 010a FFF7FEFF 		bl	__aeabi_d2iz
 854              	.LVL76:
 855 010e 0306     		lsls	r3, r0, #24
 856 0110 50D5     		bpl	.L101
 857              		.loc 1 126 0 is_stmt 0
 858 0112 2222     		movs	r2, #34
 859              	.L77:
 860              		.loc 1 126 0 discriminator 4
 861 0114 2300     		movs	r3, r4
 862 0116 2033     		adds	r3, r3, #32
 863 0118 EA52     		strh	r2, [r5, r3]
 127:Src/sk6812.c  **** 	_write_buffer[((led)*24)+17] = ((int)(in.b*255) & 0x40) ? LED_CMPH:LED_CMPL;
 864              		.loc 1 127 0 is_stmt 1 discriminator 4
 865 011a 4306     		lsls	r3, r0, #25
ARM GAS  /tmp/ccgIfHGI.s 			page 19


 866 011c 4CD5     		bpl	.L102
 867              		.loc 1 127 0 is_stmt 0
 868 011e 2222     		movs	r2, #34
 869              	.L78:
 870              		.loc 1 127 0 discriminator 4
 871 0120 2300     		movs	r3, r4
 872 0122 2233     		adds	r3, r3, #34
 873 0124 EA52     		strh	r2, [r5, r3]
 128:Src/sk6812.c  **** 	_write_buffer[((led)*24)+18] = ((int)(in.b*255) & 0x20) ? LED_CMPH:LED_CMPL;
 874              		.loc 1 128 0 is_stmt 1 discriminator 4
 875 0126 8306     		lsls	r3, r0, #26
 876 0128 48D5     		bpl	.L103
 877              		.loc 1 128 0 is_stmt 0
 878 012a 2222     		movs	r2, #34
 879              	.L79:
 880              		.loc 1 128 0 discriminator 4
 881 012c 2300     		movs	r3, r4
 882 012e 2433     		adds	r3, r3, #36
 883 0130 EA52     		strh	r2, [r5, r3]
 129:Src/sk6812.c  **** 	_write_buffer[((led)*24)+19] = ((int)(in.b*255) & 0x10) ? LED_CMPH:LED_CMPL;
 884              		.loc 1 129 0 is_stmt 1 discriminator 4
 885 0132 C306     		lsls	r3, r0, #27
 886 0134 44D5     		bpl	.L104
 887              		.loc 1 129 0 is_stmt 0
 888 0136 2222     		movs	r2, #34
 889              	.L80:
 890              		.loc 1 129 0 discriminator 4
 891 0138 2300     		movs	r3, r4
 892 013a 2633     		adds	r3, r3, #38
 893 013c EA52     		strh	r2, [r5, r3]
 130:Src/sk6812.c  **** 	_write_buffer[((led)*24)+20] = ((int)(in.b*255) & 0x08) ? LED_CMPH:LED_CMPL;
 894              		.loc 1 130 0 is_stmt 1 discriminator 4
 895 013e 0307     		lsls	r3, r0, #28
 896 0140 40D5     		bpl	.L105
 897              		.loc 1 130 0 is_stmt 0
 898 0142 2222     		movs	r2, #34
 899              	.L81:
 900              		.loc 1 130 0 discriminator 4
 901 0144 2300     		movs	r3, r4
 902 0146 2833     		adds	r3, r3, #40
 903 0148 EA52     		strh	r2, [r5, r3]
 131:Src/sk6812.c  **** 	_write_buffer[((led)*24)+21] = ((int)(in.b*255) & 0x04) ? LED_CMPH:LED_CMPL;
 904              		.loc 1 131 0 is_stmt 1 discriminator 4
 905 014a 4307     		lsls	r3, r0, #29
 906 014c 3CD5     		bpl	.L106
 907              		.loc 1 131 0 is_stmt 0
 908 014e 2222     		movs	r2, #34
 909              	.L82:
 910              		.loc 1 131 0 discriminator 4
 911 0150 2300     		movs	r3, r4
 912 0152 2A33     		adds	r3, r3, #42
 913 0154 EA52     		strh	r2, [r5, r3]
 132:Src/sk6812.c  **** 	_write_buffer[((led)*24)+22] = ((int)(in.b*255) & 0x02) ? LED_CMPH:LED_CMPL;
 914              		.loc 1 132 0 is_stmt 1 discriminator 4
 915 0156 8307     		lsls	r3, r0, #30
 916 0158 38D5     		bpl	.L107
 917              		.loc 1 132 0 is_stmt 0
ARM GAS  /tmp/ccgIfHGI.s 			page 20


 918 015a 2222     		movs	r2, #34
 919              	.L83:
 920              		.loc 1 132 0 discriminator 4
 921 015c 2300     		movs	r3, r4
 922 015e 2C33     		adds	r3, r3, #44
 923 0160 EA52     		strh	r2, [r5, r3]
 133:Src/sk6812.c  **** 	_write_buffer[((led)*24)+23] = ((int)(in.b*255) & 0x01) ? LED_CMPH:LED_CMPL;
 924              		.loc 1 133 0 is_stmt 1 discriminator 4
 925 0162 C307     		lsls	r3, r0, #31
 926 0164 34D4     		bmi	.L109
 927              		.loc 1 133 0 is_stmt 0
 928 0166 1023     		movs	r3, #16
 929              	.L84:
 930              		.loc 1 133 0 discriminator 4
 931 0168 2E34     		adds	r4, r4, #46
 932 016a 2B53     		strh	r3, [r5, r4]
 134:Src/sk6812.c  **** }
 933              		.loc 1 134 0 is_stmt 1 discriminator 4
 934              		@ sp needed
 935 016c 70BC     		pop	{r4, r5, r6}
 936 016e 08BC     		pop	{r3}
 937 0170 02B0     		add	sp, sp, #8
 938 0172 1847     		bx	r3
 939              	.L85:
 108:Src/sk6812.c  **** 	_write_buffer[((led)*24)+1] = ((int)(in.g*255) & 0x40) ? LED_CMPH:LED_CMPL;
 940              		.loc 1 108 0
 941 0174 1022     		movs	r2, #16
 942 0176 55E7     		b	.L61
 943              	.L86:
 109:Src/sk6812.c  **** 	_write_buffer[((led)*24)+2] = ((int)(in.g*255) & 0x20) ? LED_CMPH:LED_CMPL;
 944              		.loc 1 109 0
 945 0178 1022     		movs	r2, #16
 946 017a 5BE7     		b	.L62
 947              	.L87:
 110:Src/sk6812.c  **** 	_write_buffer[((led)*24)+3] = ((int)(in.g*255) & 0x10) ? LED_CMPH:LED_CMPL;
 948              		.loc 1 110 0
 949 017c 1022     		movs	r2, #16
 950 017e 5FE7     		b	.L63
 951              	.L88:
 111:Src/sk6812.c  **** 	_write_buffer[((led)*24)+4] = ((int)(in.g*255) & 0x08) ? LED_CMPH:LED_CMPL;
 952              		.loc 1 111 0
 953 0180 1022     		movs	r2, #16
 954 0182 63E7     		b	.L64
 955              	.L89:
 112:Src/sk6812.c  **** 	_write_buffer[((led)*24)+5] = ((int)(in.g*255) & 0x04) ? LED_CMPH:LED_CMPL;
 956              		.loc 1 112 0
 957 0184 1022     		movs	r2, #16
 958 0186 67E7     		b	.L65
 959              	.L90:
 113:Src/sk6812.c  **** 	_write_buffer[((led)*24)+6] = ((int)(in.g*255) & 0x02) ? LED_CMPH:LED_CMPL;
 960              		.loc 1 113 0
 961 0188 1022     		movs	r2, #16
 962 018a 6CE7     		b	.L66
 963              	.L91:
 114:Src/sk6812.c  **** 	_write_buffer[((led)*24)+7] = ((int)(in.g*255) & 0x01) ? LED_CMPH:LED_CMPL;
 964              		.loc 1 114 0
 965 018c 1022     		movs	r2, #16
ARM GAS  /tmp/ccgIfHGI.s 			page 21


 966 018e 71E7     		b	.L67
 967              	.L92:
 115:Src/sk6812.c  **** 	//g
 968              		.loc 1 115 0
 969 0190 1022     		movs	r2, #16
 970 0192 76E7     		b	.L68
 971              	.L93:
 117:Src/sk6812.c  **** 	_write_buffer[((led)*24)+9]  = ((int)(in.r*255) & 0x40) ? LED_CMPH:LED_CMPL;
 972              		.loc 1 117 0
 973 0194 1022     		movs	r2, #16
 974 0196 83E7     		b	.L69
 975              	.L94:
 118:Src/sk6812.c  **** 	_write_buffer[((led)*24)+10] = ((int)(in.r*255) & 0x20) ? LED_CMPH:LED_CMPL;
 976              		.loc 1 118 0
 977 0198 1022     		movs	r2, #16
 978 019a 88E7     		b	.L70
 979              	.L95:
 119:Src/sk6812.c  **** 	_write_buffer[((led)*24)+11] = ((int)(in.r*255) & 0x10) ? LED_CMPH:LED_CMPL;
 980              		.loc 1 119 0
 981 019c 1022     		movs	r2, #16
 982 019e 8DE7     		b	.L71
 983              	.L96:
 120:Src/sk6812.c  **** 	_write_buffer[((led)*24)+12] = ((int)(in.r*255) & 0x08) ? LED_CMPH:LED_CMPL;
 984              		.loc 1 120 0
 985 01a0 1022     		movs	r2, #16
 986 01a2 91E7     		b	.L72
 987              	.L97:
 121:Src/sk6812.c  **** 	_write_buffer[((led)*24)+13] = ((int)(in.r*255) & 0x04) ? LED_CMPH:LED_CMPL;
 988              		.loc 1 121 0
 989 01a4 1022     		movs	r2, #16
 990 01a6 95E7     		b	.L73
 991              	.L98:
 122:Src/sk6812.c  **** 	_write_buffer[((led)*24)+14] = ((int)(in.r*255) & 0x02) ? LED_CMPH:LED_CMPL;
 992              		.loc 1 122 0
 993 01a8 1022     		movs	r2, #16
 994 01aa 99E7     		b	.L74
 995              	.L99:
 123:Src/sk6812.c  **** 	_write_buffer[((led)*24)+15] = ((int)(in.r*255) & 0x01) ? LED_CMPH:LED_CMPL;
 996              		.loc 1 123 0
 997 01ac 1022     		movs	r2, #16
 998 01ae 9DE7     		b	.L75
 999              	.L100:
 124:Src/sk6812.c  **** 	//b
 1000              		.loc 1 124 0
 1001 01b0 1022     		movs	r2, #16
 1002 01b2 A1E7     		b	.L76
 1003              	.L101:
 126:Src/sk6812.c  **** 	_write_buffer[((led)*24)+17] = ((int)(in.b*255) & 0x40) ? LED_CMPH:LED_CMPL;
 1004              		.loc 1 126 0
 1005 01b4 1022     		movs	r2, #16
 1006 01b6 ADE7     		b	.L77
 1007              	.L102:
 127:Src/sk6812.c  **** 	_write_buffer[((led)*24)+18] = ((int)(in.b*255) & 0x20) ? LED_CMPH:LED_CMPL;
 1008              		.loc 1 127 0
 1009 01b8 1022     		movs	r2, #16
 1010 01ba B1E7     		b	.L78
 1011              	.L103:
ARM GAS  /tmp/ccgIfHGI.s 			page 22


 128:Src/sk6812.c  **** 	_write_buffer[((led)*24)+19] = ((int)(in.b*255) & 0x10) ? LED_CMPH:LED_CMPL;
 1012              		.loc 1 128 0
 1013 01bc 1022     		movs	r2, #16
 1014 01be B5E7     		b	.L79
 1015              	.L104:
 129:Src/sk6812.c  **** 	_write_buffer[((led)*24)+20] = ((int)(in.b*255) & 0x08) ? LED_CMPH:LED_CMPL;
 1016              		.loc 1 129 0
 1017 01c0 1022     		movs	r2, #16
 1018 01c2 B9E7     		b	.L80
 1019              	.L105:
 130:Src/sk6812.c  **** 	_write_buffer[((led)*24)+21] = ((int)(in.b*255) & 0x04) ? LED_CMPH:LED_CMPL;
 1020              		.loc 1 130 0
 1021 01c4 1022     		movs	r2, #16
 1022 01c6 BDE7     		b	.L81
 1023              	.L106:
 131:Src/sk6812.c  **** 	_write_buffer[((led)*24)+22] = ((int)(in.b*255) & 0x02) ? LED_CMPH:LED_CMPL;
 1024              		.loc 1 131 0
 1025 01c8 1022     		movs	r2, #16
 1026 01ca C1E7     		b	.L82
 1027              	.L107:
 132:Src/sk6812.c  **** 	_write_buffer[((led)*24)+23] = ((int)(in.b*255) & 0x01) ? LED_CMPH:LED_CMPL;
 1028              		.loc 1 132 0
 1029 01cc 1022     		movs	r2, #16
 1030 01ce C5E7     		b	.L83
 1031              	.L109:
 133:Src/sk6812.c  **** }
 1032              		.loc 1 133 0
 1033 01d0 2223     		movs	r3, #34
 1034 01d2 C9E7     		b	.L84
 1035              	.L111:
 1036              		.align	2
 1037              	.L110:
 1038 01d4 00E06F40 		.word	1081073664
 1039              		.cfi_endproc
 1040              	.LFE42:
 1042              		.comm	write_buffer,660,4
 1043              		.text
 1044              	.Letext0:
 1045              		.file 2 "/home/janhenrik/programme/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machin
 1046              		.file 3 "/home/janhenrik/programme/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_s
 1047              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 1048              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1049              		.file 6 "/home/janhenrik/programme/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lo
 1050              		.file 7 "/home/janhenrik/programme/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_t
 1051              		.file 8 "/home/janhenrik/programme/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/
 1052              		.file 9 "/home/janhenrik/programme/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/re
 1053              		.file 10 "Inc/sk6812.h"
ARM GAS  /tmp/ccgIfHGI.s 			page 23


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sk6812.c
     /tmp/ccgIfHGI.s:23     .text.rgb2hsv:0000000000000000 $t
     /tmp/ccgIfHGI.s:30     .text.rgb2hsv:0000000000000000 rgb2hsv
     /tmp/ccgIfHGI.s:309    .text.rgb2hsv:000000000000019c $d
     /tmp/ccgIfHGI.s:321    .text.hsv2rgb:0000000000000000 $t
     /tmp/ccgIfHGI.s:328    .text.hsv2rgb:0000000000000000 hsv2rgb
     /tmp/ccgIfHGI.s:489    .rodata.hsv2rgb:0000000000000000 $d
     /tmp/ccgIfHGI.s:614    .text.hsv2rgb:0000000000000180 $d
     /tmp/ccgIfHGI.s:622    .text.set_pixel:0000000000000000 $t
     /tmp/ccgIfHGI.s:629    .text.set_pixel:0000000000000000 set_pixel
     /tmp/ccgIfHGI.s:1038   .text.set_pixel:00000000000001d4 $d
                            *COM*:0000000000000294 write_buffer

UNDEFINED SYMBOLS
__aeabi_dcmplt
__aeabi_dcmpgt
__aeabi_dsub
__aeabi_ddiv
__aeabi_dcmpge
__aeabi_dadd
__aeabi_dmul
__aeabi_dcmple
__aeabi_d2iz
__aeabi_i2d
